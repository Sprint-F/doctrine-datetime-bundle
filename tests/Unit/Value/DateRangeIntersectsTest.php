<?php

namespace SprintF\Bundle\Datetime\Tests\Unit\Value;

use SprintF\Bundle\Datetime\Tests\Support\UnitTester;
use SprintF\Bundle\Datetime\Value\Date;
use SprintF\Bundle\Datetime\Value\DateRange;

class DateRangeIntersectsTest extends \Codeception\Test\Unit
{
    protected UnitTester $tester;

    private array $dates = [
        null,
        '2000-01-01', '2001-01-01', '2002-01-01', '2003-01-01',
        null,
    ];

    private array $this = [];
    private array $that = [];

    private array $intersects = [
        // $this
        '(,2000-01-01)' => [
            // $that
            '(,2000-01-01)' => true, '(,2001-01-01)' => true, '(,2002-01-01)' => true, '(,2003-01-01)' => true, '(,)' => true,
            '[2000-01-01,2001-01-01)' => false, '[2000-01-01,2002-01-01)' => false, '[2000-01-01,2003-01-01)' => false, '[2000-01-01,)' => false,
            '[2001-01-01,2002-01-01)' => false, '[2001-01-01,2003-01-01)' => false, '[2001-01-01,)' => false,
            '[2002-01-01,2003-01-01)' => false, '[2002-01-01,)' => false,
            '[2003-01-01,)' => false,
        ],
        '(,2001-01-01)' => [
            // $that
            '(,2000-01-01)' => true, '(,2001-01-01)' => true, '(,2002-01-01)' => true, '(,2003-01-01)' => true, '(,)' => true,
            '[2000-01-01,2001-01-01)' => true, '[2000-01-01,2002-01-01)' => true, '[2000-01-01,2003-01-01)' => true, '[2000-01-01,)' => true,
            '[2001-01-01,2002-01-01)' => false, '[2001-01-01,2003-01-01)' => false, '[2001-01-01,)' => false,
            '[2002-01-01,2003-01-01)' => false, '[2002-01-01,)' => false,
            '[2003-01-01,)' => false,
        ],
        '(,2002-01-01)' => [
            // $that
            '(,2000-01-01)' => true, '(,2001-01-01)' => true, '(,2002-01-01)' => true, '(,2003-01-01)' => true, '(,)' => true,
            '[2000-01-01,2001-01-01)' => true, '[2000-01-01,2002-01-01)' => true, '[2000-01-01,2003-01-01)' => true, '[2000-01-01,)' => true,
            '[2001-01-01,2002-01-01)' => true, '[2001-01-01,2003-01-01)' => true, '[2001-01-01,)' => true,
            '[2002-01-01,2003-01-01)' => false, '[2002-01-01,)' => false,
            '[2003-01-01,)' => false,
        ],
        '(,2003-01-01)' => [
            // $that
            '(,2000-01-01)' => true, '(,2001-01-01)' => true, '(,2002-01-01)' => true, '(,2003-01-01)' => true, '(,)' => true,
            '[2000-01-01,2001-01-01)' => true, '[2000-01-01,2002-01-01)' => true, '[2000-01-01,2003-01-01)' => true, '[2000-01-01,)' => true,
            '[2001-01-01,2002-01-01)' => true, '[2001-01-01,2003-01-01)' => true, '[2001-01-01,)' => true,
            '[2002-01-01,2003-01-01)' => true, '[2002-01-01,)' => true,
            '[2003-01-01,)' => false,
        ],
        '(,)' => [
            // $that
            '(,2000-01-01)' => true, '(,2001-01-01)' => true, '(,2002-01-01)' => true, '(,2003-01-01)' => true, '(,)' => true,
            '[2000-01-01,2001-01-01)' => true, '[2000-01-01,2002-01-01)' => true, '[2000-01-01,2003-01-01)' => true, '[2000-01-01,)' => true,
            '[2001-01-01,2002-01-01)' => true, '[2001-01-01,2003-01-01)' => true, '[2001-01-01,)' => true,
            '[2002-01-01,2003-01-01)' => true, '[2002-01-01,)' => true,
            '[2003-01-01,)' => true,
        ],

        // $this
        '[2000-01-01,2001-01-01)' => [
            // $that
            '(,2000-01-01)' => false, '(,2001-01-01)' => true, '(,2002-01-01)' => true, '(,2003-01-01)' => true, '(,)' => true,
            '[2000-01-01,2001-01-01)' => true, '[2000-01-01,2002-01-01)' => true, '[2000-01-01,2003-01-01)' => true, '[2000-01-01,)' => true,
            '[2001-01-01,2002-01-01)' => false, '[2001-01-01,2003-01-01)' => false, '[2001-01-01,)' => false,
            '[2002-01-01,2003-01-01)' => false, '[2002-01-01,)' => false,
            '[2003-01-01,)' => false,
        ],
        '[2000-01-01,2002-01-01)' => [
            // $that
            '(,2000-01-01)' => false, '(,2001-01-01)' => true, '(,2002-01-01)' => true, '(,2003-01-01)' => true, '(,)' => true,
            '[2000-01-01,2001-01-01)' => true, '[2000-01-01,2002-01-01)' => true, '[2000-01-01,2003-01-01)' => true, '[2000-01-01,)' => true,
            '[2001-01-01,2002-01-01)' => true, '[2001-01-01,2003-01-01)' => true, '[2001-01-01,)' => true,
            '[2002-01-01,2003-01-01)' => false, '[2002-01-01,)' => false,
            '[2003-01-01,)' => false,
        ],
        '[2000-01-01,2003-01-01)' => [
            // $that
            '(,2000-01-01)' => false, '(,2001-01-01)' => true, '(,2002-01-01)' => true, '(,2003-01-01)' => true, '(,)' => true,
            '[2000-01-01,2001-01-01)' => true, '[2000-01-01,2002-01-01)' => true, '[2000-01-01,2003-01-01)' => true, '[2000-01-01,)' => true,
            '[2001-01-01,2002-01-01)' => true, '[2001-01-01,2003-01-01)' => true, '[2001-01-01,)' => true,
            '[2002-01-01,2003-01-01)' => true, '[2002-01-01,)' => true,
            '[2003-01-01,)' => false,
        ],
        '[2000-01-01,)' => [
            // $that
            '(,2000-01-01)' => false, '(,2001-01-01)' => true, '(,2002-01-01)' => true, '(,2003-01-01)' => true, '(,)' => true,
            '[2000-01-01,2001-01-01)' => true, '[2000-01-01,2002-01-01)' => true, '[2000-01-01,2003-01-01)' => true, '[2000-01-01,)' => true,
            '[2001-01-01,2002-01-01)' => true, '[2001-01-01,2003-01-01)' => true, '[2001-01-01,)' => true,
            '[2002-01-01,2003-01-01)' => true, '[2002-01-01,)' => true,
            '[2003-01-01,)' => true,
        ],

        // $this
        '[2001-01-01,2002-01-01)' => [
            // $that
            '(,2000-01-01)' => false, '(,2001-01-01)' => false, '(,2002-01-01)' => true, '(,2003-01-01)' => true, '(,)' => true,
            '[2000-01-01,2001-01-01)' => false, '[2000-01-01,2002-01-01)' => true, '[2000-01-01,2003-01-01)' => true, '[2000-01-01,)' => true,
            '[2001-01-01,2002-01-01)' => true, '[2001-01-01,2003-01-01)' => true, '[2001-01-01,)' => true,
            '[2002-01-01,2003-01-01)' => false, '[2002-01-01,)' => false,
            '[2003-01-01,)' => false,
        ],
        '[2001-01-01,2003-01-01)' => [
            // $that
            '(,2000-01-01)' => false, '(,2001-01-01)' => false, '(,2002-01-01)' => true, '(,2003-01-01)' => true, '(,)' => true,
            '[2000-01-01,2001-01-01)' => false, '[2000-01-01,2002-01-01)' => true, '[2000-01-01,2003-01-01)' => true, '[2000-01-01,)' => true,
            '[2001-01-01,2002-01-01)' => true, '[2001-01-01,2003-01-01)' => true, '[2001-01-01,)' => true,
            '[2002-01-01,2003-01-01)' => true, '[2002-01-01,)' => true,
            '[2003-01-01,)' => false,
        ],
        '[2001-01-01,)' => [
            // $that
            '(,2000-01-01)' => false, '(,2001-01-01)' => false, '(,2002-01-01)' => true, '(,2003-01-01)' => true, '(,)' => true,
            '[2000-01-01,2001-01-01)' => false, '[2000-01-01,2002-01-01)' => true, '[2000-01-01,2003-01-01)' => true, '[2000-01-01,)' => true,
            '[2001-01-01,2002-01-01)' => true, '[2001-01-01,2003-01-01)' => true, '[2001-01-01,)' => true,
            '[2002-01-01,2003-01-01)' => true, '[2002-01-01,)' => true,
            '[2003-01-01,)' => true,
        ],

        // $this
        '[2002-01-01,2003-01-01)' => [
            // $that
            '(,2000-01-01)' => false, '(,2001-01-01)' => false, '(,2002-01-01)' => false, '(,2003-01-01)' => true, '(,)' => true,
            '[2000-01-01,2001-01-01)' => false, '[2000-01-01,2002-01-01)' => false, '[2000-01-01,2003-01-01)' => true, '[2000-01-01,)' => true,
            '[2001-01-01,2002-01-01)' => false, '[2001-01-01,2003-01-01)' => true, '[2001-01-01,)' => true,
            '[2002-01-01,2003-01-01)' => true, '[2002-01-01,)' => true,
            '[2003-01-01,)' => false,
        ],
        '[2002-01-01,)' => [
            // $that
            '(,2000-01-01)' => false, '(,2001-01-01)' => false, '(,2002-01-01)' => false, '(,2003-01-01)' => true, '(,)' => true,
            '[2000-01-01,2001-01-01)' => false, '[2000-01-01,2002-01-01)' => false, '[2000-01-01,2003-01-01)' => true, '[2000-01-01,)' => true,
            '[2001-01-01,2002-01-01)' => false, '[2001-01-01,2003-01-01)' => true, '[2001-01-01,)' => true,
            '[2002-01-01,2003-01-01)' => true, '[2002-01-01,)' => true,
            '[2003-01-01,)' => true,
        ],

        // $this
        '[2003-01-01,)' => [
            // $that
            '(,2000-01-01)' => false, '(,2001-01-01)' => false, '(,2002-01-01)' => false, '(,2003-01-01)' => false, '(,)' => true,
            '[2000-01-01,2001-01-01)' => false, '[2000-01-01,2002-01-01)' => false, '[2000-01-01,2003-01-01)' => false, '[2000-01-01,)' => true,
            '[2001-01-01,2002-01-01)' => false, '[2001-01-01,2003-01-01)' => false, '[2001-01-01,)' => true,
            '[2002-01-01,2003-01-01)' => false, '[2002-01-01,)' => true,
            '[2003-01-01,)' => true,
        ],
    ];

    protected function _before()
    {
        foreach ($this->dates as $i => $beginDate) {
            foreach (array_slice($this->dates, $i + 1) as $endDate) {
                $range = new DateRange($beginDate ? new Date($beginDate) : null, $endDate ? new Date($endDate) : null);
                $this->this[(string) $range] = $range;
                $this->that[(string) $range] = $range;
            }
        }
    }

    // tests
    public function testIntersects()
    {
        foreach ($this->this as $thisRange) {
            foreach ($this->that as $thatRange) {
                $this->assertSame(
                    $this->intersects[(string) $thisRange][(string) $thatRange] ?? null,
                    $thisRange->intersects($thatRange),
                    (string) $thisRange.' && '.(string) $thatRange
                );
            }
        }
    }
}
